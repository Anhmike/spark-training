{"paragraphs":[{"text":"%md\n# Pretty Printing","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231338_2022404335","id":"20160617-174039_493869597","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Pretty Printing</h1>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:251"},{"text":"implicit class ZeppelinOutput[T](ds:org.apache.spark.sql.Dataset[T]) {\n    def toZeppelin(limit:Int = -1)  = {\n        val df = ds.toDF\n        println(\"%table\")\n        println(df.schema.map(_.name).mkString(\"\\t\"))\n        val data = if (limit <= 0) df else df.limit(limit)\n        data.collect.foreach(row => println(row.mkString(\"\\t\")))\n    }\n}","dateUpdated":"2017-01-08T05:52:55-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231338_2022404335","id":"20160617-174039_442021124","result":{"code":"SUCCESS","type":"TEXT","msg":"\ndefined class ZeppelinOutput\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:252","dateFinished":"2017-01-08T05:52:56-0800","dateStarted":"2017-01-08T05:52:55-0800","focus":true},{"text":"%md\n# Load Data into Hive","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231338_2022404335","id":"20160617-174039_903096095","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Load Data into Hive</h1>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:253"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483883586526_1640803134","id":"20170108-055306_2008372397","dateCreated":"2017-01-08T05:53:06-0800","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3701","text":"%sql\ncreate database if not exists training\nlocation '/user/hive/warehouse/training.db'","dateUpdated":"2017-01-08T05:53:18-0800"},{"text":"%sql\ncreate external table if not exists training.bike_sharing(\n    row_id int,\n    date string,\n    season int,\n    year int,\n    month int,\n    hour int,\n    holiday int,\n    weekday int,\n    workingday int,\n    weather int,\n    temperature double,\n    apparent_temperature double,\n    humidity double,\n    wind_speed double,\n    casual int,\n    registered int,\n    counter int) \nROW FORMAT DELIMITED FIELDS TERMINATED BY ','\nSTORED AS TEXTFILE\nLOCATION '/user/training/data/bike-sharing'","dateUpdated":"2017-01-08T05:53:36-0800","config":{"enabled":true,"tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/sql","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231338_2022404335","id":"20160617-174039_2069135316","result":{"code":"SUCCESS","type":"TABLE","msg":"result\n","comment":"","msgTable":[],"columnNames":[{"name":"result","index":0,"aggr":"sum"}],"rows":[]},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:254"},{"text":"%sql\nselect * from training.bike_sharing limit 10","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/sql","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231339_2022019586","id":"20160617-174039_1754560141","result":{"code":"SUCCESS","type":"TABLE","msg":"row_id\tdate\tseason\tyear\tmonth\thour\tholiday\tweekday\tworkingday\tweather\ttemperature\tapparent_temperature\thumidity\twind_speed\tcasual\tregistered\tcounter\n1\t2011-01-01\t1\t0\t1\t0\t0\t6\t0\t1\t0.24\t0.2879\t0.81\t0.0\t3\t13\t16\n2\t2011-01-01\t1\t0\t1\t1\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t8\t32\t40\n3\t2011-01-01\t1\t0\t1\t2\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t5\t27\t32\n4\t2011-01-01\t1\t0\t1\t3\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t3\t10\t13\n5\t2011-01-01\t1\t0\t1\t4\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t0\t1\t1\n6\t2011-01-01\t1\t0\t1\t5\t0\t6\t0\t2\t0.24\t0.2576\t0.75\t0.0896\t0\t1\t1\n7\t2011-01-01\t1\t0\t1\t6\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t2\t0\t2\n8\t2011-01-01\t1\t0\t1\t7\t0\t6\t0\t1\t0.2\t0.2576\t0.86\t0.0\t1\t2\t3\n9\t2011-01-01\t1\t0\t1\t8\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t1\t7\t8\n10\t2011-01-01\t1\t0\t1\t9\t0\t6\t0\t1\t0.32\t0.3485\t0.76\t0.0\t8\t6\t14\n","comment":"","msgTable":[[{"key":"date","value":"1"},{"key":"date","value":"2011-01-01"},{"key":"date","value":"1"},{"key":"date","value":"0"},{"key":"date","value":"1"},{"key":"date","value":"0"},{"key":"date","value":"0"},{"key":"date","value":"6"},{"key":"date","value":"0"},{"key":"date","value":"1"},{"key":"date","value":"0.24"},{"key":"date","value":"0.2879"},{"key":"date","value":"0.81"},{"key":"date","value":"0.0"},{"key":"date","value":"3"},{"key":"date","value":"13"},{"key":"date","value":"16"}],[{"key":"season","value":"2"},{"key":"season","value":"2011-01-01"},{"key":"season","value":"1"},{"key":"season","value":"0"},{"key":"season","value":"1"},{"key":"season","value":"1"},{"key":"season","value":"0"},{"key":"season","value":"6"},{"key":"season","value":"0"},{"key":"season","value":"1"},{"key":"season","value":"0.22"},{"key":"season","value":"0.2727"},{"key":"season","value":"0.8"},{"key":"season","value":"0.0"},{"key":"season","value":"8"},{"key":"season","value":"32"},{"key":"season","value":"40"}],[{"key":"year","value":"3"},{"key":"year","value":"2011-01-01"},{"key":"year","value":"1"},{"key":"year","value":"0"},{"key":"year","value":"1"},{"key":"year","value":"2"},{"key":"year","value":"0"},{"key":"year","value":"6"},{"key":"year","value":"0"},{"key":"year","value":"1"},{"key":"year","value":"0.22"},{"key":"year","value":"0.2727"},{"key":"year","value":"0.8"},{"key":"year","value":"0.0"},{"key":"year","value":"5"},{"key":"year","value":"27"},{"key":"year","value":"32"}],[{"key":"month","value":"4"},{"key":"month","value":"2011-01-01"},{"key":"month","value":"1"},{"key":"month","value":"0"},{"key":"month","value":"1"},{"key":"month","value":"3"},{"key":"month","value":"0"},{"key":"month","value":"6"},{"key":"month","value":"0"},{"key":"month","value":"1"},{"key":"month","value":"0.24"},{"key":"month","value":"0.2879"},{"key":"month","value":"0.75"},{"key":"month","value":"0.0"},{"key":"month","value":"3"},{"key":"month","value":"10"},{"key":"month","value":"13"}],[{"key":"hour","value":"5"},{"key":"hour","value":"2011-01-01"},{"key":"hour","value":"1"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"4"},{"key":"hour","value":"0"},{"key":"hour","value":"6"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"0.24"},{"key":"hour","value":"0.2879"},{"key":"hour","value":"0.75"},{"key":"hour","value":"0.0"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"1"}],[{"key":"holiday","value":"6"},{"key":"holiday","value":"2011-01-01"},{"key":"holiday","value":"1"},{"key":"holiday","value":"0"},{"key":"holiday","value":"1"},{"key":"holiday","value":"5"},{"key":"holiday","value":"0"},{"key":"holiday","value":"6"},{"key":"holiday","value":"0"},{"key":"holiday","value":"2"},{"key":"holiday","value":"0.24"},{"key":"holiday","value":"0.2576"},{"key":"holiday","value":"0.75"},{"key":"holiday","value":"0.0896"},{"key":"holiday","value":"0"},{"key":"holiday","value":"1"},{"key":"holiday","value":"1"}],[{"key":"weekday","value":"7"},{"key":"weekday","value":"2011-01-01"},{"key":"weekday","value":"1"},{"key":"weekday","value":"0"},{"key":"weekday","value":"1"},{"key":"weekday","value":"6"},{"key":"weekday","value":"0"},{"key":"weekday","value":"6"},{"key":"weekday","value":"0"},{"key":"weekday","value":"1"},{"key":"weekday","value":"0.22"},{"key":"weekday","value":"0.2727"},{"key":"weekday","value":"0.8"},{"key":"weekday","value":"0.0"},{"key":"weekday","value":"2"},{"key":"weekday","value":"0"},{"key":"weekday","value":"2"}],[{"key":"workingday","value":"8"},{"key":"workingday","value":"2011-01-01"},{"key":"workingday","value":"1"},{"key":"workingday","value":"0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"7"},{"key":"workingday","value":"0"},{"key":"workingday","value":"6"},{"key":"workingday","value":"0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"0.2"},{"key":"workingday","value":"0.2576"},{"key":"workingday","value":"0.86"},{"key":"workingday","value":"0.0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"2"},{"key":"workingday","value":"3"}],[{"key":"weather","value":"9"},{"key":"weather","value":"2011-01-01"},{"key":"weather","value":"1"},{"key":"weather","value":"0"},{"key":"weather","value":"1"},{"key":"weather","value":"8"},{"key":"weather","value":"0"},{"key":"weather","value":"6"},{"key":"weather","value":"0"},{"key":"weather","value":"1"},{"key":"weather","value":"0.24"},{"key":"weather","value":"0.2879"},{"key":"weather","value":"0.75"},{"key":"weather","value":"0.0"},{"key":"weather","value":"1"},{"key":"weather","value":"7"},{"key":"weather","value":"8"}],[{"key":"temperature","value":"10"},{"key":"temperature","value":"2011-01-01"},{"key":"temperature","value":"1"},{"key":"temperature","value":"0"},{"key":"temperature","value":"1"},{"key":"temperature","value":"9"},{"key":"temperature","value":"0"},{"key":"temperature","value":"6"},{"key":"temperature","value":"0"},{"key":"temperature","value":"1"},{"key":"temperature","value":"0.32"},{"key":"temperature","value":"0.3485"},{"key":"temperature","value":"0.76"},{"key":"temperature","value":"0.0"},{"key":"temperature","value":"8"},{"key":"temperature","value":"6"},{"key":"temperature","value":"14"}]],"columnNames":[{"name":"row_id","index":0,"aggr":"sum"},{"name":"date","index":1,"aggr":"sum"},{"name":"season","index":2,"aggr":"sum"},{"name":"year","index":3,"aggr":"sum"},{"name":"month","index":4,"aggr":"sum"},{"name":"hour","index":5,"aggr":"sum"},{"name":"holiday","index":6,"aggr":"sum"},{"name":"weekday","index":7,"aggr":"sum"},{"name":"workingday","index":8,"aggr":"sum"},{"name":"weather","index":9,"aggr":"sum"},{"name":"temperature","index":10,"aggr":"sum"},{"name":"apparent_temperature","index":11,"aggr":"sum"},{"name":"humidity","index":12,"aggr":"sum"},{"name":"wind_speed","index":13,"aggr":"sum"},{"name":"casual","index":14,"aggr":"sum"},{"name":"registered","index":15,"aggr":"sum"},{"name":"counter","index":16,"aggr":"sum"}],"rows":[["1","2011-01-01","1","0","1","0","0","6","0","1","0.24","0.2879","0.81","0.0","3","13","16"],["2","2011-01-01","1","0","1","1","0","6","0","1","0.22","0.2727","0.8","0.0","8","32","40"],["3","2011-01-01","1","0","1","2","0","6","0","1","0.22","0.2727","0.8","0.0","5","27","32"],["4","2011-01-01","1","0","1","3","0","6","0","1","0.24","0.2879","0.75","0.0","3","10","13"],["5","2011-01-01","1","0","1","4","0","6","0","1","0.24","0.2879","0.75","0.0","0","1","1"],["6","2011-01-01","1","0","1","5","0","6","0","2","0.24","0.2576","0.75","0.0896","0","1","1"],["7","2011-01-01","1","0","1","6","0","6","0","1","0.22","0.2727","0.8","0.0","2","0","2"],["8","2011-01-01","1","0","1","7","0","6","0","1","0.2","0.2576","0.86","0.0","1","2","3"],["9","2011-01-01","1","0","1","8","0","6","0","1","0.24","0.2879","0.75","0.0","1","7","8"],["10","2011-01-01","1","0","1","9","0","6","0","1","0.32","0.3485","0.76","0.0","8","6","14"]]},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:255"},{"text":"%md\n# Alternative: Load Data from File","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231339_2022019586","id":"20160617-174039_1794332830","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Alternative: Load Data from File</h1>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:256"},{"text":"import org.apache.spark.sql.Row\nimport org.apache.spark.sql.types._\n\nval raw_data = sc.textFile(\"s3://is24-data-dev-spark-training/data/bike-sharing\")\nval column_data = raw_data.map(x => Row.fromSeq(x.split(\",\")))\n\nval schema = StructType(Array(\n    StructField(\"row_id\",StringType,true),\n    StructField(\"date\",StringType, true),\n    StructField(\"season\",StringType, true),\n    StructField(\"year\",StringType, true),\n    StructField(\"month\",StringType, true),\n    StructField(\"hour\",StringType, true),\n    StructField(\"holiday\",StringType, true),\n    StructField(\"weekday\",StringType, true),\n    StructField(\"workingday\",StringType, true),\n    StructField(\"weather\",StringType, true),\n    StructField(\"temperature\",StringType, true),\n    StructField(\"apparent_temperature\",StringType, true),\n    StructField(\"humidity\",StringType, true),\n    StructField(\"wind_speed\",StringType, true),\n    StructField(\"casual\",StringType, true),\n    StructField(\"registered\",StringType, true),\n    StructField(\"counter\",StringType, true)\n    ))\n    \nval structured_data = sqlContext.createDataFrame(column_data, schema)    \nval data = structured_data.select(\n    $\"row_id\".cast(IntegerType),\n    $\"date\".cast(StringType),\n    $\"season\".cast(IntegerType),\n    $\"year\".cast(IntegerType),\n    $\"month\".cast(IntegerType),\n    $\"hour\".cast(IntegerType),\n    $\"holiday\".cast(IntegerType),\n    $\"weekday\".cast(IntegerType),\n    $\"workingday\".cast(IntegerType),\n    $\"weather\".cast(IntegerType),\n    $\"temperature\".cast(DoubleType),\n    $\"apparent_temperature\".cast(DoubleType),\n    $\"humidity\".cast(DoubleType),\n    $\"wind_speed\".cast(DoubleType),\n    $\"casual\".cast(IntegerType),\n    $\"registered\".cast(IntegerType),\n    $\"counter\".cast(IntegerType)\n    )","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231340_2020095842","id":"20160617-174039_239018989","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.sql.Row\nimport org.apache.spark.sql.types._\nraw_data: org.apache.spark.rdd.RDD[String] = s3://is24-data-dev-spark-training/data/bike-sharing MapPartitionsRDD[494] at textFile at <console>:84\ncolumn_data: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[495] at map at <console>:85\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(row_id,StringType,true), StructField(date,StringType,true), StructField(season,StringType,true), StructField(year,StringType,true), StructField(month,StringType,true), StructField(hour,StringType,true), StructField(holiday,StringType,true), StructField(weekday,StringType,true), StructField(workingday,StringType,true), StructField(weather,StringType,true), StructField(temperature,StringType,true), StructField(apparent_temperature,StringType,true), StructField(humidity,StringType,true), StructField(wind_speed,StringType,true), StructField(casual,StringType,true), StructField(registered,StringType,true), StructField(counter,StringType,true))\nstructured_data: org.apache.spark.sql.DataFrame = [row_id: string, date: string, season: string, year: string, month: string, hour: string, holiday: string, weekday: string, workingday: string, weather: string, temperature: string, apparent_temperature: string, humidity: string, wind_speed: string, casual: string, registered: string, counter: string]\ndata: org.apache.spark.sql.DataFrame = [row_id: int, date: string, season: int, year: int, month: int, hour: int, holiday: int, weekday: int, workingday: int, weather: int, temperature: double, apparent_temperature: double, humidity: double, wind_speed: double, casual: int, registered: int, counter: int]\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:257"},{"text":"data.toZeppelin(10)","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"row_id","index":0,"aggr":"sum"}],"values":[{"name":"date","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"row_id","index":0,"aggr":"sum"},"yAxis":{"name":"date","index":1,"aggr":"sum"}}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231340_2020095842","id":"20160617-174039_1397728233","result":{"code":"SUCCESS","type":"TABLE","msg":"row_id\tdate\tseason\tyear\tmonth\thour\tholiday\tweekday\tworkingday\tweather\ttemperature\tapparent_temperature\thumidity\twind_speed\tcasual\tregistered\tcounter\n1\t2011-01-01\t1\t0\t1\t0\t0\t6\t0\t1\t0.24\t0.2879\t0.81\t0.0\t3\t13\t16\n2\t2011-01-01\t1\t0\t1\t1\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t8\t32\t40\n3\t2011-01-01\t1\t0\t1\t2\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t5\t27\t32\n4\t2011-01-01\t1\t0\t1\t3\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t3\t10\t13\n5\t2011-01-01\t1\t0\t1\t4\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t0\t1\t1\n6\t2011-01-01\t1\t0\t1\t5\t0\t6\t0\t2\t0.24\t0.2576\t0.75\t0.0896\t0\t1\t1\n7\t2011-01-01\t1\t0\t1\t6\t0\t6\t0\t1\t0.22\t0.2727\t0.8\t0.0\t2\t0\t2\n8\t2011-01-01\t1\t0\t1\t7\t0\t6\t0\t1\t0.2\t0.2576\t0.86\t0.0\t1\t2\t3\n9\t2011-01-01\t1\t0\t1\t8\t0\t6\t0\t1\t0.24\t0.2879\t0.75\t0.0\t1\t7\t8\n10\t2011-01-01\t1\t0\t1\t9\t0\t6\t0\t1\t0.32\t0.3485\t0.76\t0.0\t8\t6\t14\n","comment":"","msgTable":[[{"key":"date","value":"1"},{"key":"date","value":"2011-01-01"},{"key":"date","value":"1"},{"key":"date","value":"0"},{"key":"date","value":"1"},{"key":"date","value":"0"},{"key":"date","value":"0"},{"key":"date","value":"6"},{"key":"date","value":"0"},{"key":"date","value":"1"},{"key":"date","value":"0.24"},{"key":"date","value":"0.2879"},{"key":"date","value":"0.81"},{"key":"date","value":"0.0"},{"key":"date","value":"3"},{"key":"date","value":"13"},{"key":"date","value":"16"}],[{"key":"season","value":"2"},{"key":"season","value":"2011-01-01"},{"key":"season","value":"1"},{"key":"season","value":"0"},{"key":"season","value":"1"},{"key":"season","value":"1"},{"key":"season","value":"0"},{"key":"season","value":"6"},{"key":"season","value":"0"},{"key":"season","value":"1"},{"key":"season","value":"0.22"},{"key":"season","value":"0.2727"},{"key":"season","value":"0.8"},{"key":"season","value":"0.0"},{"key":"season","value":"8"},{"key":"season","value":"32"},{"key":"season","value":"40"}],[{"key":"year","value":"3"},{"key":"year","value":"2011-01-01"},{"key":"year","value":"1"},{"key":"year","value":"0"},{"key":"year","value":"1"},{"key":"year","value":"2"},{"key":"year","value":"0"},{"key":"year","value":"6"},{"key":"year","value":"0"},{"key":"year","value":"1"},{"key":"year","value":"0.22"},{"key":"year","value":"0.2727"},{"key":"year","value":"0.8"},{"key":"year","value":"0.0"},{"key":"year","value":"5"},{"key":"year","value":"27"},{"key":"year","value":"32"}],[{"key":"month","value":"4"},{"key":"month","value":"2011-01-01"},{"key":"month","value":"1"},{"key":"month","value":"0"},{"key":"month","value":"1"},{"key":"month","value":"3"},{"key":"month","value":"0"},{"key":"month","value":"6"},{"key":"month","value":"0"},{"key":"month","value":"1"},{"key":"month","value":"0.24"},{"key":"month","value":"0.2879"},{"key":"month","value":"0.75"},{"key":"month","value":"0.0"},{"key":"month","value":"3"},{"key":"month","value":"10"},{"key":"month","value":"13"}],[{"key":"hour","value":"5"},{"key":"hour","value":"2011-01-01"},{"key":"hour","value":"1"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"4"},{"key":"hour","value":"0"},{"key":"hour","value":"6"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"0.24"},{"key":"hour","value":"0.2879"},{"key":"hour","value":"0.75"},{"key":"hour","value":"0.0"},{"key":"hour","value":"0"},{"key":"hour","value":"1"},{"key":"hour","value":"1"}],[{"key":"holiday","value":"6"},{"key":"holiday","value":"2011-01-01"},{"key":"holiday","value":"1"},{"key":"holiday","value":"0"},{"key":"holiday","value":"1"},{"key":"holiday","value":"5"},{"key":"holiday","value":"0"},{"key":"holiday","value":"6"},{"key":"holiday","value":"0"},{"key":"holiday","value":"2"},{"key":"holiday","value":"0.24"},{"key":"holiday","value":"0.2576"},{"key":"holiday","value":"0.75"},{"key":"holiday","value":"0.0896"},{"key":"holiday","value":"0"},{"key":"holiday","value":"1"},{"key":"holiday","value":"1"}],[{"key":"weekday","value":"7"},{"key":"weekday","value":"2011-01-01"},{"key":"weekday","value":"1"},{"key":"weekday","value":"0"},{"key":"weekday","value":"1"},{"key":"weekday","value":"6"},{"key":"weekday","value":"0"},{"key":"weekday","value":"6"},{"key":"weekday","value":"0"},{"key":"weekday","value":"1"},{"key":"weekday","value":"0.22"},{"key":"weekday","value":"0.2727"},{"key":"weekday","value":"0.8"},{"key":"weekday","value":"0.0"},{"key":"weekday","value":"2"},{"key":"weekday","value":"0"},{"key":"weekday","value":"2"}],[{"key":"workingday","value":"8"},{"key":"workingday","value":"2011-01-01"},{"key":"workingday","value":"1"},{"key":"workingday","value":"0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"7"},{"key":"workingday","value":"0"},{"key":"workingday","value":"6"},{"key":"workingday","value":"0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"0.2"},{"key":"workingday","value":"0.2576"},{"key":"workingday","value":"0.86"},{"key":"workingday","value":"0.0"},{"key":"workingday","value":"1"},{"key":"workingday","value":"2"},{"key":"workingday","value":"3"}],[{"key":"weather","value":"9"},{"key":"weather","value":"2011-01-01"},{"key":"weather","value":"1"},{"key":"weather","value":"0"},{"key":"weather","value":"1"},{"key":"weather","value":"8"},{"key":"weather","value":"0"},{"key":"weather","value":"6"},{"key":"weather","value":"0"},{"key":"weather","value":"1"},{"key":"weather","value":"0.24"},{"key":"weather","value":"0.2879"},{"key":"weather","value":"0.75"},{"key":"weather","value":"0.0"},{"key":"weather","value":"1"},{"key":"weather","value":"7"},{"key":"weather","value":"8"}],[{"key":"temperature","value":"10"},{"key":"temperature","value":"2011-01-01"},{"key":"temperature","value":"1"},{"key":"temperature","value":"0"},{"key":"temperature","value":"1"},{"key":"temperature","value":"9"},{"key":"temperature","value":"0"},{"key":"temperature","value":"6"},{"key":"temperature","value":"0"},{"key":"temperature","value":"1"},{"key":"temperature","value":"0.32"},{"key":"temperature","value":"0.3485"},{"key":"temperature","value":"0.76"},{"key":"temperature","value":"0.0"},{"key":"temperature","value":"8"},{"key":"temperature","value":"6"},{"key":"temperature","value":"14"}]],"columnNames":[{"name":"row_id","index":0,"aggr":"sum"},{"name":"date","index":1,"aggr":"sum"},{"name":"season","index":2,"aggr":"sum"},{"name":"year","index":3,"aggr":"sum"},{"name":"month","index":4,"aggr":"sum"},{"name":"hour","index":5,"aggr":"sum"},{"name":"holiday","index":6,"aggr":"sum"},{"name":"weekday","index":7,"aggr":"sum"},{"name":"workingday","index":8,"aggr":"sum"},{"name":"weather","index":9,"aggr":"sum"},{"name":"temperature","index":10,"aggr":"sum"},{"name":"apparent_temperature","index":11,"aggr":"sum"},{"name":"humidity","index":12,"aggr":"sum"},{"name":"wind_speed","index":13,"aggr":"sum"},{"name":"casual","index":14,"aggr":"sum"},{"name":"registered","index":15,"aggr":"sum"},{"name":"counter","index":16,"aggr":"sum"}],"rows":[["1","2011-01-01","1","0","1","0","0","6","0","1","0.24","0.2879","0.81","0.0","3","13","16"],["2","2011-01-01","1","0","1","1","0","6","0","1","0.22","0.2727","0.8","0.0","8","32","40"],["3","2011-01-01","1","0","1","2","0","6","0","1","0.22","0.2727","0.8","0.0","5","27","32"],["4","2011-01-01","1","0","1","3","0","6","0","1","0.24","0.2879","0.75","0.0","3","10","13"],["5","2011-01-01","1","0","1","4","0","6","0","1","0.24","0.2879","0.75","0.0","0","1","1"],["6","2011-01-01","1","0","1","5","0","6","0","2","0.24","0.2576","0.75","0.0896","0","1","1"],["7","2011-01-01","1","0","1","6","0","6","0","1","0.22","0.2727","0.8","0.0","2","0","2"],["8","2011-01-01","1","0","1","7","0","6","0","1","0.2","0.2576","0.86","0.0","1","2","3"],["9","2011-01-01","1","0","1","8","0","6","0","1","0.24","0.2879","0.75","0.0","1","7","8"],["10","2011-01-01","1","0","1","9","0","6","0","1","0.32","0.3485","0.76","0.0","8","6","14"]]},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:258"},{"text":"%md\n# Prepare Data","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_294797498","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Prepare Data</h1>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:259"},{"text":"val data = sqlContext.table(\"training.bike_sharing\")\nval ddata = data.select(\n        $\"date\",\n        unix_timestamp($\"date\", \"yyyy-MM-dd\").cast(DoubleType).alias(\"ts\"),\n        $\"season\".cast(\"Double\"),\n        $\"year\".cast(\"Double\"),\n        $\"month\".cast(\"Double\"),\n        $\"hour\".cast(\"Double\"),\n        $\"holiday\".cast(\"Double\"),\n        $\"weekday\".cast(\"Double\"),\n        $\"workingday\".cast(\"Double\"),\n        $\"weather\".cast(\"Double\"),\n        $\"temperature\",\n        $\"apparent_temperature\",\n        $\"humidity\",\n        $\"wind_speed\",\n        $\"casual\".cast(DoubleType),\n        $\"registered\".cast(DoubleType),\n        $\"counter\".cast(DoubleType)\n    )\n    ","dateUpdated":"2017-01-08T05:53:53-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_416775257","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:260"},{"text":"%md\n# Cache Data\n\nSince ddata will now be our basis for all sorts of processing, we want to cache it.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_1797571532","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Cache Data</h1>\n<p>Since ddata will now be our basis for all sorts of processing, we want to cache it.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:261"},{"text":"ddata.cache()","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_984792328","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:262"},{"text":"%md\n# Make some nice Pictures\n\nThe original data contains rents per hour, we want to have the data per day. Maybe we can already see some patterns here?","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_748189267","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Make some nice Pictures</h1>\n<p>The original data contains rents per hour, we want to have the data per day. Maybe we can already see some patterns here?</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:263"},{"text":"// Generate Table with summed data per day","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"ts","index":0,"aggr":"sum"}],"values":[{"name":"sum(counter)","index":1,"aggr":"sum"}],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231341_2019711093","id":"20160617-174039_1300257284","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:264"},{"text":"// Generate Table with summed data per day, only for casual renters","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"ts","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"ts","index":0,"aggr":"sum"}}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_630580316","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:265"},{"text":"// Generate Table with summed data per day, only for registered renters","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"ts","index":0,"aggr":"sum"}],"values":[{"name":"sum(counter)","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ts","index":0,"aggr":"sum"},"yAxis":{"name":"sum(counter)","index":1,"aggr":"sum"}}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_331573067","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:266"},{"text":"%md\n# Initial Statistics on Values","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_261413913","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Initial Statistics on Values</h1>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:267"},{"text":"// Print some initial statistics for every column in the dataframe using the stats() method from RDD\n\n","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_1979577676","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:268"},{"text":"%md\n# Linear Regression\n\nNow we want to perform all steps required for creating a predictive model via a linear regression. We will do this in multiple steps:\n\n1. Create a Helper Function for Extracting Feature Vectors\n2. Transform the DataFrame using Helper Function\n3. Split Data into Training Data and Test Data\n4. Create Model\n5. Perform Predictions\n6. Evaluate Model","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_1945341208","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Linear Regression</h1>\n<p>Now we want to perform all steps required for creating a predictive model via a linear regression. We will do this in multiple steps:</p>\n<ol>\n<li>Create a Helper Function for Extracting Feature Vectors</li>\n<li>Transform the DataFrame using Helper Function</li>\n<li>Split Data into Training Data and Test Data</li>\n<li>Create Model</li>\n<li>Perform Predictions</li>\n<li>Evaluate Model</li>\n</ol>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:269"},{"text":"%md\n## 1. Extract Vectors for Regression\n\nSpark ML requires a special type \"Vector\" for representing features. Therefore we need to build these Vectors from all columns that we want to use as a vector.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231342_2020865339","id":"20160617-174039_2058640928","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1. Extract Vectors for Regression</h2>\n<p>Spark ML requires a special type &ldquo;Vector&rdquo; for representing features. Therefore we need to build these Vectors from all columns that we want to use as a vector.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:270"},{"text":"import org.apache.spark.ml.linalg.Vectors\n\ndef extract_vector(row:Row, cols:Array[Int]) = ...\n\nprintln(extract_vector(Row(\"Bob\",23.0), Array(1)))\n","dateUpdated":"2017-01-08T05:55:26-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231343_2020480590","id":"20160617-174039_1469040079","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:271"},{"text":"%md\n## 2. Transform DataFrame\n\nNow that we have extract_vector, we can use it in order to extract the relevant features from our DataFrame","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231343_2020480590","id":"20160617-174039_537118194","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>2. Transform DataFrame</h2>\n<p>Now that we have extract_vector, we can use it in order to extract the relevant features from our DataFrame</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:272"},{"text":"// Use the following columns for extracting the Features\nval cols = Array(1,2,3,4,5,6,7,8,9,10,11,12,13)\n\n// Transform all records ddata into tuples (feature, counter)\n// counter can be found in column row(16)\n// the resulting columns should be called \"features\" and \"counter\"\nval features_labels = ...\n\n// Peek inside the new dataframe\nfeatures_labels.toZeppelin(6)\n","dateUpdated":"2017-01-08T05:56:36-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"features","index":0,"aggr":"sum"}],"values":[{"name":"counter","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"features","index":0,"aggr":"sum"}}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231343_2020480590","id":"20160617-174039_1471718217","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:273"},{"text":"%md\n## 3. Split Data into Training Data and Test Data","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231343_2020480590","id":"20160617-174039_451426973","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3. Split Data into Training Data and Test Data</h2>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:274"},{"text":"// Initialize train_data and test_data\n...\n\nprintln(train_data.count())\nprintln(test_data.count())","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231343_2020480590","id":"20160617-174039_73410360","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:275"},{"text":"%md\n## 4. Perform Simple Linear Regression\n\nWe simply need to create an instance of a LinearRegression, set input and target column names and the prediction column name.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_1152307142","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>4. Perform Simple Linear Regression</h2>\n<p>We simply need to create an instance of a LinearRegression, set input and target column names and the prediction column name.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:276"},{"text":"import org.apache.spark.ml.regression._\n\n","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_818606948","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:277"},{"text":"%md\n### Peek Inside the Model","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_1546732354","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Peek Inside the Model</h3>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:278"},{"text":"","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_641126743","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:279"},{"text":"","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_1491712602","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:280"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483883834553_2079369263","id":"20170108-055714_820098938","dateCreated":"2017-01-08T05:57:14-0800","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3771","text":"val statistics = cols.zipWithIndex.map { \n        case (col,idx) => (\n             ddata.schema(col).name, \n             model.coefficients(idx),\n             model.summary.coefficientStandardErrors(idx),\n             model.summary.tValues(idx), \n             model.summary.pValues(idx)\n        )\n    }.toSeq\n    .toDS\n    .withColumnRenamed(\"_1\", \"feature\")\n    .withColumnRenamed(\"_2\", \"coefficient\")\n    .withColumnRenamed(\"_3\", \"stdError\")\n    .withColumnRenamed(\"_4\", \"tValue\")\n    .withColumnRenamed(\"_5\", \"pValue\")\n\n\nstatistics.toZeppelin()","dateUpdated":"2017-01-08T05:57:56-0800"},{"text":"%md\n## 5. Perform Predictions\n\nPredict new Data by applying the model to the test data","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231344_2030868811","id":"20160617-174039_1489606736","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>5. Perform Predictions</h2>\n<p>Predict new Data by applying the model to the test data</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:281"},{"text":"","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231345_2030484062","id":"20160617-174039_456055226","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:282"},{"text":"%md\n## 6. Evaluate Model\n\nFinally we want to evaluate our model, i.e. calculate a metric which tells us the quality of predictions.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231345_2030484062","id":"20160617-174039_551047239","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>6. Evaluate Model</h2>\n<p>Finally we want to evaluate our model, i.e. calculate a metric which tells us the quality of predictions.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"text":"\n","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231345_2030484062","id":"20160617-174039_1501460009","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:284"},{"text":"%md\n# VectorAssembler instead of Manual Feature Extraction\n\nManual feature extraction (i.e. creation of the Vector) is a little bit tedious and not very comfortable. But luckily, there is a valuable helper called VectorAssembler.\n\nWe use it to automatically extract the columns\n\n    season, year, month, hour, holiday, weekday, workingday, weather, \n    temperature, apparent_temperature, humidity, wind_speed\n\ninto the new output column 'features'\n\nSo we will again create a regression, but in a cleaner way.\n\n1. Split Data into Training and Validation Set\n2. Create Features Using Vector Assembler and Train Model\n3. Predict Data\n4. Evaluate Model","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231345_2030484062","id":"20160617-174039_2105519013","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>VectorAssembler instead of Manual Feature Extraction</h1>\n<p>Manual feature extraction (i.e. creation of the Vector) is a little bit tedious and not very comfortable. But luckily, there is a valuable helper called VectorAssembler.</p>\n<p>We use it to automatically extract the columns</p>\n<pre><code>season, year, month, hour, holiday, weekday, workingday, weather, \ntemperature, apparent_temperature, humidity, wind_speed\n</code></pre>\n<p>into the new output column 'features'</p>\n<p>So we will again create a regression, but in a cleaner way.</p>\n<ol>\n<li>Split Data into Training and Validation Set</li>\n<li>Create Features Using Vector Assembler and Train Model</li>\n<li>Predict Data</li>\n<li>Evaluate Model</li>\n</ol>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:285"},{"text":"%md\n## Vector Assembler\n\nBefore beginning with the regression, lets have a look how a VectorAssembler works, and why it can help us.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231345_2030484062","id":"20160617-174039_1222516225","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Vector Assembler</h2>\n<p>Before beginning with the regression, lets have a look how a VectorAssembler works, and why it can help us.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:286"},{"text":"\n","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_1854142726","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:287"},{"text":"td.printSchema()","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_441594265","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:288"},{"text":"%md\n## 1. Split Train and Test Data\n\nSince we found an easier way to generate features, we split incoming data first and apply the VectorAssembler","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_171327823","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1. Split Train and Test Data</h2>\n<p>Since we found an easier way to generate features, we split incoming data first and apply the VectorAssembler</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:289"},{"text":"val Array(train_data, test_data) = ddata.randomSplit(Array(0.8,0.2), seed=0)\nprintln(train_data.count())\nprintln(test_data.count())","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_1878634181","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"text":"%md\n## 2. Perform Regression\n\n1. Apply VectorAssembler\n2. Perform Fitting","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_1900101873","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>2. Perform Regression</h2>\n<ol>\n<li>Apply VectorAssembler</li>\n<li>Perform Fitting</li>\n</ol>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"text":"val asm = ...\n\nval regression = ...\n\nval model = ...","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231346_2031638309","id":"20160617-174039_1930348621","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"text":"%md\n## 3. Predict\n\nMake predictions from test data and print some results","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231347_2031253560","id":"20160617-174039_1333817918","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3. Predict</h2>\n<p>Make predictions from test data and print some results</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:293"},{"text":"val prediction = ...\n\nprediction.toZeppelin(10)","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231348_2029329815","id":"20160617-174039_2043440440","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:294"},{"text":"%md\n## 4. Evaluate Model\n\nFinally lets evaluate the prediction","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231348_2029329815","id":"20160617-174039_1544992256","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>4. Evaluate Model</h2>\n<p>Finally lets evaluate the prediction</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"text":"","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231348_2029329815","id":"20160617-174039_1460070715","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:296"},{"text":"%md\n# Make new Pictures of Predictions\n\nLet us visually compare the prediction with the true values for the validation data set.","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/markdown","editorHide":true,"colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231348_2029329815","id":"20160617-174039_112872736","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Make new Pictures of Predictions</h1>\n<p>Let us visually compare the prediction with the true values for the validation data set.</p>\n"},"dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"text":"prediction\n    .groupBy(\"ts\").agg(sum(\"counter\"), sum(\"prediction\")) \n    .orderBy(\"ts\")\n    .toZeppelin()","dateUpdated":"2017-01-05T02:47:11-0800","config":{"enabled":true,"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"ts","index":0,"aggr":"sum"}],"values":[{"name":"sum(counter)","index":1,"aggr":"sum"},{"name":"sum(prediction)","index":2,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"ts","index":0,"aggr":"sum"},"yAxis":{"name":"sum(counter)","index":1,"aggr":"sum"}}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231349_2028945066","id":"20160617-174039_824013651","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"text":"","dateUpdated":"2017-01-05T02:48:12-0800","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1483613231349_2028945066","id":"20160617-174039_75392854","dateCreated":"2017-01-05T02:47:11-0800","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:299"}],"name":"Bike Sharing Regression Skeleton","id":"2C7UCFTEU","angularObjects":{"2C7PVCCMW:shared_process":[],"2C7N8FNUK:shared_process":[],"2C4ZABBYG:shared_process":[],"2C7NHPHKH:shared_process":[],"2C4ACPMVH:shared_process":[],"2C5JAXWD8:shared_process":[],"2C68PFPBP:shared_process":[],"2C6BVC9ES:shared_process":[],"2C66FR28V:shared_process":[],"2C4Y5MV3V:shared_process":[],"2C6KQ2GNT:shared_process":[],"2C78K3BRW:shared_process":[],"2C81FGN7P:shared_process":[],"2C5BQGTGT:shared_process":[],"2C7VFSCFR:shared_process":[],"2C5MXJ5D6:shared_process":[],"2C44EB781:shared_process":[],"2C4JS2HDQ:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}